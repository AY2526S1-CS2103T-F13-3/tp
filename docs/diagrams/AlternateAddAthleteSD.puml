@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddAthleteCommandParser" as AddAthleteCommandParser LOGIC_COLOR
participant "c:AddAthleteCommand" as AddAthleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("add-a n/LeBron James s/Basketball a/40 p/98765432 e/james@example.com")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("add-a n/LeBron James s/Basketball a/40 p/98765432 e/james@example.com")
activate AddressBookParser

ref over AddressBookParser, AddAthleteCommandParser, AddAthleteCommand
  parse details and build add command
end ref

' create AddAthleteCommand
' AddAthleteCommandParser -> AddAthleteCommand
' activate AddAthleteCommand

' AddAthleteCommand --> AddAthleteCommandParser :
' deactivate AddAthleteCommand
' destroy AddAthleteCommand

AddressBookParser --> LogicManager : command
deactivate AddressBookParser
destroy AddressBookParser

LogicManager -> AddAthleteCommand : execute(m)
activate AddAthleteCommand

AddAthleteCommand -> Model : hasAthlete(toAdd)?
activate Model

Model --> AddAthleteCommand : boolean
deactivate Model

alt athlete does not exist
    AddAthleteCommand -> Model : addAthlete(toAdd)
    activate Model
    Model --> AddAthleteCommand
    deactivate Model

    create CommandResult
    AddAthleteCommand -> CommandResult
    activate CommandResult
    CommandResult --> AddAthleteCommand
    deactivate CommandResult
    destroy CommandResult
else athlete already exists
    AddAthleteCommand -> AddAthleteCommand : throw CommandException
end

AddAthleteCommand --> LogicManager : r / exception
deactivate AddAthleteCommand
destroy AddAthleteCommand

[<--LogicManager
deactivate LogicManager
destroy LogicManager
@enduml
